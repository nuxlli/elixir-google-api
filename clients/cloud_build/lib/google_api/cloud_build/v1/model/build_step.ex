# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudBuild.V1.Model.BuildStep do
  @moduledoc """
  A step in the build pipeline.

  ## Attributes

  - args ([String.t]): A list of arguments that will be presented to the step when it is started.  If the image used to run the step&#39;s container has an entrypoint, the &#x60;args&#x60; are used as arguments to that entrypoint. If the image does not define an entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments. Defaults to: `null`.
  - dir (String.t): Working directory to use when running this step&#39;s container.  If this value is a relative path, it is relative to the build&#39;s working directory. If this value is absolute, it may be outside the build&#39;s working directory, in which case the contents of the path may not be persisted across build step executions, unless a &#x60;volume&#x60; for that path is specified.  If the build specifies a &#x60;RepoSource&#x60; with &#x60;dir&#x60; and a step with a &#x60;dir&#x60;, which specifies an absolute path, the &#x60;RepoSource&#x60; &#x60;dir&#x60; is ignored for the step&#39;s execution. Defaults to: `null`.
  - entrypoint (String.t): Entrypoint to be used instead of the build step image&#39;s default entrypoint. If unset, the image&#39;s default entrypoint is used. Defaults to: `null`.
  - env ([String.t]): A list of environment variable definitions to be used when running a step.  The elements are of the form \&quot;KEY&#x3D;VALUE\&quot; for the environment variable \&quot;KEY\&quot; being given the value \&quot;VALUE\&quot;. Defaults to: `null`.
  - id (String.t): Unique identifier for this build step, used in &#x60;wait_for&#x60; to reference this build step as a dependency. Defaults to: `null`.
  - name (String.t): Required. The name of the container image that will run this particular build step.  If the image is available in the host&#39;s Docker daemon&#39;s cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service account&#39;s credentials if necessary.  The Docker daemon&#39;s cache will already have the latest versions of all of the officially supported build steps ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)). The Docker daemon will also have cached many of the layers for some popular images, like \&quot;ubuntu\&quot;, \&quot;debian\&quot;, but they will be refreshed at the time you attempt to use them.  If you built an image in a previous build step, it will be stored in the host&#39;s Docker daemon&#39;s cache and is available to use as the name for a later build step. Defaults to: `null`.
  - secretEnv ([String.t]): A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build&#39;s &#x60;Secret&#x60;. Defaults to: `null`.
  - status (String.t): Output only. Status of the build step. At this time, build step status is only updated on build completion; step status is not updated in real-time as the build progresses. Defaults to: `null`.
    - Enum - one of [STATUS_UNKNOWN, QUEUED, WORKING, SUCCESS, FAILURE, INTERNAL_ERROR, TIMEOUT, CANCELLED]
  - timeout (String.t): Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself times out. Defaults to: `null`.
  - timing (TimeSpan): Output only. Stores timing information for executing this build step. Defaults to: `null`.
  - volumes ([Volume]): List of volumes to mount into the build step.  Each volume will be created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents will be discarded.  Using a named volume in only one step is not valid as it is indicative of a mis-configured build request. Defaults to: `null`.
  - waitFor ([String.t]): The ID(s) of the step(s) that this build step depends on. This build step will not start until all the build steps in &#x60;wait_for&#x60; have completed successfully. If &#x60;wait_for&#x60; is empty, this build step will start when all previous build steps in the &#x60;Build.Steps&#x60; list have completed successfully. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          args: any(),
          dir: any(),
          entrypoint: any(),
          env: any(),
          id: any(),
          name: any(),
          secretEnv: any(),
          status: any(),
          timeout: any(),
          timing: GoogleApi.CloudBuild.V1.Model.TimeSpan.t(),
          volumes: list(GoogleApi.CloudBuild.V1.Model.Volume.t()),
          waitFor: any()
        }

  defstruct [
    :args,
    :dir,
    :entrypoint,
    :env,
    :id,
    :name,
    :secretEnv,
    :status,
    :timeout,
    :timing,
    :volumes,
    :waitFor
  ]
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.BuildStep do
  import GoogleApi.CloudBuild.V1.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:timing, :struct, GoogleApi.CloudBuild.V1.Model.TimeSpan, options)
    |> deserialize(:volumes, :list, GoogleApi.CloudBuild.V1.Model.Volume, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.BuildStep do
  def encode(value, options) do
    GoogleApi.CloudBuild.V1.Deserializer.serialize_non_nil(value, options)
  end
end
